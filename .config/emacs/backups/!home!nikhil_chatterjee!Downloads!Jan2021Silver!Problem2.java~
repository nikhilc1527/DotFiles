package Jan2021Silver;

import java.util.*;

public class Problem2 {
    static char[] toPaint;
    static int[] colors;
    static int smallest;
    static int count;
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        int q = s.nextInt();
        s.nextLine();
        String fence = s.nextLine();
        int[] res = new int[q];
        toPaint = fence.toCharArray();
        colors = new int[toPaint.length];
        for(int i=0; i<toPaint.length; i++) {
            colors[i] = toPaint[i] - 65;
        }
        for(int i=0; i<q; i++){
           res[i] = paint(0, s.nextInt()-1) + paint(s.nextInt(), toPaint.length);
           s.nextLine();
        }
        for(int i: res) {
            System.out.println(i);
        }
    }

    static int paint(int start, int end) {
        if(start>=end)
            return 0;
        count = 1;
        smallest = 0;
        for(int i=start; i<end; i++) {
            if(colors[i]<smallest)
                smallest = colors[i];
        }

        int tracker = -1;
        for(int i=start; i<end; i++) {
            if(colors[i] == smallest){
                if(tracker!=-1) {
                    count += paint(tracker, i);
                    tracker = -1;
                }
            }
            else if(tracker == -1){
                tracker = i;
            }

        }
        if(tracker!=-1)
            count += paint(tracker, end);
        return count;
    }
}
